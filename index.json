{
    "openapi": "3.0.3",
    "info": {
        "version": "1.0.0",
        "title": "LABEL TRUST API",
        "description": "API documentation",
        "termsOfService": "https://www.labelstrust.com/terms.html",
        "contact": {
            "email": "contact@labelstrust.com",
            "name": "Contact du support API,",
            "url": "https://www.labelstrust.com"
        },
        "license": {
            "name": "Hokwe Co 2.0",
            "url": "https://www.labelstrust.com/license.html"
        }
    },
    "servers": [
        {
            "url": "{{ip_address}}:{{port}}/api",
            "description": "Local development environment",
            "variables": {
                "ip_address": {
                    "default": "http://localhost",
                    "description": "Ip address"
                },
                "port": {
                    "enum": [
                        "80",
                        "8000",
                        "8001"
                    ],
                    "default": "8000"
                }
            }
        },
        {
            "url": "{{ip_address}}/api",
            "description": "Staging environment",
            "variables": {
                "ip_address": {
                    "default": "https://label-trust-api.ani-cashewpms.com",
                    "description": "Ip address"
                }
            }
        }
    ],
    "tags": [
        {
            "name": "Permissions",
            "description": "APIs related to permissions management. These endpoints allow clients to manage permissions associated with various resources."
        },
        {
            "name": "Roles",
            "description": "APIs related to roles management. These endpoints enable clients to manage roles assigned to users."
        },
        {
            "name": "Users",
            "description": "APIs related to users management. These endpoints allow clients to create, retrieve, update, and delete user accounts."
        },
        {
            "name": "Authentication",
            "description": "APIs related to user authentication and authorization. These endpoints handle user login, logout, and token management."
        },
        {
            "name": "Departements",
            "description": "APIs related to departements management. These endpoints allow clients to create, retrieve, update, and delete departements."
        },
        {
            "name": "Postes",
            "description": "APIs related to postes management. These endpoints allow clients to create, retrieve, update, and delete postes."
        },
        {
            "name": "Devises",
            "description": "APIs related to devises management. These endpoints allow clients to create, retrieve, update, and delete devises."
        },
        {
            "name": "PeriodesExercice",
            "description": "APIs related to periodes exercice management. These endpoints allow clients to create, retrieve, update, and delete periodes exercice."
        },
        {
            "name": "CategoriesDeCompte",
            "description": "APIs related to categories de compte management. These endpoints allow clients to create, retrieve, update, and delete categories de compte."
        },
        {
            "name": "ClassesDeCompte",
            "description": "APIs related to classes de compte management. These endpoints allow clients to create, retrieve, update, and delete classes de compte."
        },
        {
            "name": "Comptes",
            "description": "APIs related to comptes management. These endpoints allow clients to create, retrieve, update, and delete comptes."
        },
        {
            "name": "Journaux",
            "description": "APIs related to journaux management. These endpoints allow clients to create, retrieve, update, and delete journaux."
        },
        {
            "name": "PeriodesExercice",
            "description": "APIs related to periodes d'exercice management. These endpoints allow clients to create, retrieve, update, and delete periodes d'exercice."
        },
        {
            "name": "Plans comptable",
            "description": "APIs related to comptes management. These endpoints allow clients to create, retrieve, update, and delete comptes."
        },
        {
            "name": "ListOfPlanComptableAccounts",
            "description": "APIs related to comptes management. These endpoints allow clients to create, retrieve, update, and delete comptes."
        },
        {
            "name": "AttachAccountsToPlanComptable",
            "description": "APIs related to comptes management. These endpoints allow clients to create, retrieve, update, and delete comptes."
        },
        {
            "name": "DetachAccountsToPlanComptable",
            "description": "APIs related to comptes management. These endpoints allow clients to create, retrieve, update, and delete comptes."
        },
        {
            "name": "Immobilisations",
            "description": "APIs related to immobilisations management. These endpoints allow clients to create, retrieve, update, and delete immobilisations."
        },
        {
            "name": "ProjetsProduction",
            "description": "APIs related to projets de production management. These endpoints allow clients to create, retrieve, update, and delete projets de production."
        }
    ],
    "paths": {
        "/permissions": {
            "tags": [
                "Permissions"
            ],
            "description": "Permissions",
            "$ref": "paths/permissions.json"
        },
        "/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "$ref": "paths/roles/list_role.json"
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "$ref": "paths/roles/create_role.json"
            }
        },
        "/roles/{roleId}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "$ref": "paths/roles/find_role.json"
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "$ref": "paths/roles/update_role.json"
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "$ref": "paths/roles/delete_role.json"
            }
        },
        "/roles/{roleId}/grant-access": {
            "$ref": "paths/roles/grant_access.json"
        },
        "/roles/{roleId}/revoke-access": {
            "$ref": "paths/roles/revoke_access.json"
        },
        "/unite_mesures": {
            "$ref": "paths/Unite_Mesure/unites.json"
        },
        "/unite_mesures/{{uniteMesureId}}": {
            "$ref": "paths/Unite_Mesure/unite.json"
        },
        "/unite_travailles": {
            "$ref": "paths/Unite_travaille/unite_travaille.json"
        },
        "/unite_travailles/{{uniteTravailleId}}": {
            "$ref": "paths/Unite_travaille/unite_travailles.json"
        },
        "/unite_travailles/{uniteTravailleId}/add-taux": {
            "$ref": "paths/taux/create.json"
        },
        "/unite_travailles/{uniteTravailleId}/edit-taux": {
            "$ref": "paths/taux/update.json"
        },
        "/unite_travailles/{uniteTravailleId}/remove-taux": {
            "$ref": "paths/taux/delete.json"
        },
        "/magasins/{magasinId}": {
            "$ref": "paths/magasins/magasin.json"
        },
        "/magasins": {
            "$ref": "paths/magasins/magasins.json"
        },
        "/articles": {
            "$ref": "paths/articles/articles.json"
        },
        "/articles/{articleId}": {
            "$ref": "paths/articles/article.json"
        },
        "/categorie_articles": {
            "$ref": "paths/articles/categories_articles/categories.json"
        },
        "/categorie_articles/{categorieArticleId}": {
            "$ref": "paths/articles/categories_articles/categorie.json"
        },
        "/users": {
            "get": {
                "summary": "Retrieve users",
                "description": "Retrieves users information based on certain criteria.",
                "parameters": [
                    {
                        "$ref": "components/parameters/page.json"
                    },
                    {
                        "$ref": "components/parameters/per_page.json"
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "description": "The current page number.",
                                                    "default": 1,
                                                    "minimum": 1,
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "description": "Additional information about the response.",
                                                    "items": {
                                                        "$ref": "#/components/schemas/User"
                                                    }
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "description": "The URL of the page.",
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "description": "The label of the page.",
                                                                "nullable": true
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "description": "Indicates whether the page is active."
                                                            }
                                                        }
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "The total number of items per page. Defaults to 15.",
                                                    "default": 15,
                                                    "example": 36,
                                                    "minimum": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "The total number of items available per page. Defaults to 15, with a minimum of 10 and a maximum of 25.",
                                                    "default": 15,
                                                    "example": 15,
                                                    "minimum": 10,
                                                    "maximum": 25
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the next page. Can be null if there is no next page.",
                                                    "nullable": true
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the previous page. Can be null if there is no previous page.",
                                                    "nullable": true
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the first page."
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The starting index of the data on the current page. Minimum value is 1."
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The last page number. Minimum value is 3."
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the last page.",
                                                    "nullable": true,
                                                    "default": "{{baseUrl}}/users?page=1",
                                                    "example": "{{baseUrl}}/users?page=1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "The path of the current page.",
                                                    "default": "{{baseUrl}}/users",
                                                    "example": "{{baseUrl}}/users"
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "description": "The ending index of the data on the current page. Example value is 2. Can be null.",
                                                    "example": 2,
                                                    "default": 1,
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Store user",
                "description": "Store a new user information based on certain criteria.",
                "parameters": [
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Create a new user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Indicates whether the request was successful.",
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": "User successful create."
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User",
                                            "description": "Additional information about the response."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 201,
                                            "example": 201
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "summary": "Retrieve a user",
                "description": "Retrieve user information based on certain criteria.",
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The unique identifier of the user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "description": "Additional information about the response.",
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a user",
                "description": "Update user information based on certain criteria.",
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The unique identifier of the user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Update new user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Indicates whether the request was successful.",
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User",
                                            "description": "Additional information about the response.",
                                            "example": true
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 201,
                                            "example": 201
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a user",
                "description": "Delete user information based on certain criteria.",
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The unique identifier of the user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "description": "Additional information about the response.",
                                            "type": "boolean",
                                            "nullable": true,
                                            "default": null,
                                            "example": null
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/roles": {
            "get": {
                "summary": "Retrieve user roles",
                "description": "Retrieves user roles information based on certain criteria.",
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The unique identifier of the user.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "description": "The current page number.",
                                                    "default": 1,
                                                    "minimum": 1,
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "description": "Additional information about the response.",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Role"
                                                    }
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "description": "The URL of the page.",
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "description": "The label of the page.",
                                                                "nullable": true
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "description": "Indicates whether the page is active."
                                                            }
                                                        }
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "The total number of items per page. Defaults to 15.",
                                                    "default": 15,
                                                    "example": 36,
                                                    "minimum": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "The total number of items available per page. Defaults to 15, with a minimum of 10 and a maximum of 25.",
                                                    "default": 15,
                                                    "example": 15,
                                                    "minimum": 10,
                                                    "maximum": 25
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the next page. Can be null if there is no next page.",
                                                    "nullable": true
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the previous page. Can be null if there is no previous page.",
                                                    "nullable": true
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the first page."
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The starting index of the data on the current page. Minimum value is 1."
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The last page number. Minimum value is 3."
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the last page.",
                                                    "nullable": true,
                                                    "default": "{{baseUrl}}/roles?page=1",
                                                    "example": "{{baseUrl}}/roles?page=1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "The path of the current page.",
                                                    "default": "{{baseUrl}}/roles",
                                                    "example": "{{baseUrl}}/roles"
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "description": "The ending index of the data on the current page. Example value is 2. Can be null.",
                                                    "example": 2,
                                                    "default": 1,
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/assign-roles": {
            "put": {
                "summary": "Assign roles to a user.",
                "description": "Grant permissions access to user.",
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The unique identifier of the user.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Update new user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Identifier"
                                        },
                                        "description": "UUID unique au sein de notre systeme"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Access granted to user successfully.",
                                            "nullable": true,
                                            "example": "Access granted to user successfully.",
                                            "default": "Access granted to user successfully."
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "nullable": true,
                                            "example": true,
                                            "default": true
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/revoke-roles": {
            "put": {
                "summary": "Revoke roles from user.",
                "description": "Revoke roles from user.",
                "parameters": [
                    {
                        "name": "userId",
                        "description": "The unique identifier of the user.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Update new user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Identifier"
                                        },
                                        "description": "UUID unique au sein de notre systeme"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Access granted to user successfully.",
                                            "nullable": true,
                                            "example": "Access granted to user successfully.",
                                            "default": "Access granted to user successfully."
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "description": "",
                                            "nullable": true,
                                            "example": true,
                                            "default": true
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "description": "",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/departements": {
            "get": {
                "tags": [
                    "Departements"
                ],
                "$ref": "paths/departements/list_departement.json"
            },
            "post": {
                "tags": [
                    "Departements"
                ],
                "$ref": "paths/departements/create_departement.json"
            }
        },
        "/departements/{departementId}": {
            "get": {
                "tags": [
                    "Departements"
                ],
                "$ref": "paths/departements/find_departement.json"
            },
            "put": {
                "tags": [
                    "Departements"
                ],
                "$ref": "paths/departements/update_departement.json"
            },
            "delete": {
                "tags": [
                    "Departements"
                ],
                "$ref": "paths/departements/delete_departement.json"
            }
        },
        "/postes": {
            "get": {
                "tags": [
                    "Postes"
                ],
                "$ref": "paths/postes/list_postes.json"
            },
            "post": {
                "tags": [
                    "Postes"
                ],
                "$ref": "paths/postes/create_poste.json"
            }
        },
        "/postes/{posteId}": {
            "get": {
                "tags": [
                    "Postes"
                ],
                "$ref": "paths/postes/find_poste.json"
            },
            "put": {
                "tags": [
                    "Postes"
                ],
                "$ref": "paths/postes/update_poste.json"
            },
            "delete": {
                "tags": [
                    "Postes"
                ],
                "$ref": "paths/postes/delete_poste.json"
            }
        },
        "/postes/{posteId}/salaries": {
            "$ref": "paths/postes/fetch_poste_salaries.json"
        },
        "/postes/{posteId}/attach-salaries": {
            "$ref": "paths/postes/attach_salaries.json"
        },
        "/postes/{posteId}/detach-salaries": {
            "$ref": "paths/postes/detach_salaries.json"
        },
        "/categories_of_employees": {
            "get": {
                "summary": "Retrieve categories of employees",
                "description": "Retrieves categories of employees information based on certain criteria.",
                "parameters": [
                    {
                        "$ref": "components/parameters/page.json"
                    },
                    {
                        "$ref": "components/parameters/per_page.json"
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "description": "The current page number.",
                                                    "default": 1,
                                                    "minimum": 1,
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "description": "Additional information about the response.",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CategoryOfEmployee"
                                                    }
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "description": "The URL of the page.",
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "description": "The label of the page.",
                                                                "nullable": true
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "description": "Indicates whether the page is active."
                                                            }
                                                        }
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "The total number of items per page. Defaults to 15.",
                                                    "default": 15,
                                                    "example": 36,
                                                    "minimum": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "The total number of items available per page. Defaults to 15, with a minimum of 10 and a maximum of 25.",
                                                    "default": 15,
                                                    "example": 15,
                                                    "minimum": 10,
                                                    "maximum": 25
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the next page. Can be null if there is no next page.",
                                                    "nullable": true
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the previous page. Can be null if there is no previous page.",
                                                    "nullable": true
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the first page."
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The starting index of the data on the current page. Minimum value is 1."
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The last page number. Minimum value is 3."
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the last page.",
                                                    "nullable": true,
                                                    "default": "{{baseUrl}}/categories_of_employees?page=1",
                                                    "example": "{{baseUrl}}/categories_of_employees?page=1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "The path of the current page.",
                                                    "default": "{{baseUrl}}/categories_of_employees",
                                                    "example": "{{baseUrl}}/categories_of_employees"
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "description": "The ending index of the data on the current page. Example value is 2. Can be null.",
                                                    "example": 2,
                                                    "default": 1,
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "enum": [
                                                200,
                                                201,
                                                204
                                            ],
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Retrieve categories of employees",
                "description": "Retrieves categories of employees information based on certain criteria.",
                "parameters": [
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Create a new categories of employees in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Indicates whether the request was successful.",
                                "$ref": "#/components/schemas/CategoryOfEmployeeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/CategoryOfEmployee",
                                            "description": "Additional information about the response."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 201,
                                            "example": 201
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories_of_employees/{categoryOfEmployeeId}": {
            "get": {
                "summary": "Retrieve a category of employee",
                "description": "Retrieve category of employee information based on certain criteria.",
                "parameters": [
                    {
                        "name": "categoryOfEmployeeId",
                        "description": "The unique identifier of the category of employee",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "description": "Additional information about the response.",
                                            "$ref": "#/components/schemas/CategoryOfEmployee"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a category of employee",
                "description": "Update category of employee information based on certain criteria.",
                "parameters": [
                    {
                        "name": "categoryOfEmployeeId",
                        "description": "The unique identifier of the category of employee",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Update new category of employee in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Indicates whether the request was successful.",
                                "$ref": "#/components/schemas/CategoryOfEmployeeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryOfEmployee",
                                            "description": "Additional information about the response.",
                                            "example": true
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 201,
                                            "example": 201
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a category of employee",
                "description": "Delete category of employee information based on certain criteria.",
                "parameters": [
                    {
                        "name": "categoryOfEmployeeId",
                        "description": "The unique identifier of the category of employee",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "description": "Additional information about the response.",
                                            "type": "boolean",
                                            "nullable": true,
                                            "default": null,
                                            "example": null
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories_of_employees/{categoryOfEmployeeId}/taux": {
            "get": {
                "summary": "Retrieve category of employee taux.",
                "description": "Retrieve category of employee taux.",
                "parameters": [
                    {
                        "name": "categoryOfEmployeeId",
                        "description": "The unique identifier of the user.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "description": "The current page number.",
                                                    "default": 1,
                                                    "minimum": 1,
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "description": "Additional information about the response.",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Taux"
                                                    }
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": "string",
                                                                "description": "The URL of the page.",
                                                                "nullable": true
                                                            },
                                                            "label": {
                                                                "type": "string",
                                                                "description": "The label of the page.",
                                                                "nullable": true
                                                            },
                                                            "active": {
                                                                "type": "boolean",
                                                                "description": "Indicates whether the page is active."
                                                            }
                                                        }
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "The total number of items per page. Defaults to 15.",
                                                    "default": 15,
                                                    "example": 36,
                                                    "minimum": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "The total number of items available per page. Defaults to 15, with a minimum of 10 and a maximum of 25.",
                                                    "default": 15,
                                                    "example": 15,
                                                    "minimum": 10,
                                                    "maximum": 25
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the next page. Can be null if there is no next page.",
                                                    "nullable": true
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the previous page. Can be null if there is no previous page.",
                                                    "nullable": true
                                                },
                                                "first_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the first page."
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The starting index of the data on the current page. Minimum value is 1."
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "minimum": 1,
                                                    "default": 1,
                                                    "example": 1,
                                                    "description": "The last page number. Minimum value is 3."
                                                },
                                                "last_page_url": {
                                                    "type": "string",
                                                    "description": "The URL of the last page.",
                                                    "nullable": true,
                                                    "default": "{{baseUrl}}/roles?page=1",
                                                    "example": "{{baseUrl}}/roles?page=1"
                                                },
                                                "path": {
                                                    "type": "string",
                                                    "description": "The path of the current page.",
                                                    "default": "{{baseUrl}}/roles",
                                                    "example": "{{baseUrl}}/roles"
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "description": "The ending index of the data on the current page. Example value is 2. Can be null.",
                                                    "example": 2,
                                                    "default": 1,
                                                    "nullable": true
                                                }
                                            }
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories_of_employees/{categoryOfEmployeeId}/attach-taux": {
            "put": {
                "summary": "Attach taux to a category of employees.",
                "description": "Attach taux to a category of employees.",
                "parameters": [
                    {
                        "name": "categoryOfEmployeeId",
                        "description": "The unique identifier of the user.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Update new user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "taux": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "taux_id": {
                                                    "$ref": "#/components/schemas/Identifier",
                                                    "description": ""
                                                },
                                                "est_le_taux_de_base": {
                                                    "type": "boolean",
                                                    "default": false,
                                                    "example": false
                                                }
                                            }
                                        },
                                        "description": "UUID unique au sein de notre systeme"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Taux attached to category of employee successfully",
                                            "nullable": true,
                                            "example": "Taux attached to category of employee successfully",
                                            "default": "Taux attached to category of employee successfully"
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "description": "",
                                            "nullable": true,
                                            "example": true,
                                            "default": true
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "description": "",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories_of_employees/{categoryOfEmployeeId}/detach-taux": {
            "patch": {
                "summary": "Detach taux from category of employees.",
                "description": "Detach roles from user.",
                "parameters": [
                    {
                        "name": "categoryOfEmployeeId",
                        "description": "The unique identifier of the user.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Identifier"
                        }
                    },
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Update new user in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "taux": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Identifier"
                                        },
                                        "description": "UUID unique au sein de notre systeme"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Taux detached to category of employee successfully.",
                                            "nullable": true,
                                            "example": "Taux detached to category of employee successfully.",
                                            "default": "Taux detached to category of employee successfully."
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "description": "",
                                            "nullable": true,
                                            "example": true,
                                            "default": true
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "description": "",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/employees": {
            "$ref": "paths/employees/employees.json"
        },
        "/employee/{employee_id}": {
            "$ref": "paths/employees/employee.json"
        },
        "/employees_contractuel/{employeeContractuelId}/fiches-de-paie": {
            "$ref": "paths/employees/payslips/list.json"
        },
        "/employees_contractuel/{employeeContractuelId}/generate-fiche-de-paie": {
            "post": {
                "tags": [
                    "PaySlips"
                ],
                "$ref": "paths/employees/payslips/generate.json"
            }
        },
        "/employees_contractuel/{employeeContractuelId}/fiches-de-paie/{ficheId}": {
            "put": {
                "tags": [
                    "PaySlips"
                ],
                "$ref": "paths/employees/payslips/update.json"
            }
        },
        "/employeenoncontractuels/{employeeNonContractuelId}/invoices": {
            "$ref": "paths/employees/invoices/list.json"
        },
        "/employeenoncontractuels/{employeeNonContractuelId}/generate-invoice": {
            "post": {
                "tags": [
                    "Employee non contractuel invoices"
                ],
                "$ref": "paths/employees/invoices/generate.json"
            }
        },
        "/employeenoncontractuels/{employeeNonContractuelId}/invoices/{invoiceId}": {
            "put": {
                "tags": [
                    "Employee non contractuel invoices"
                ],
                "$ref": "paths/employees/invoices/update.json"
            }
        },
        "/partners": {
            "$ref": "paths/partners/partners.json"
        },
        "/partners/{partnerId}": {
            "$ref": "paths/partners/partner.json"
        },
        "/devises": {
            "get": {
                "tags": [
                    "Devises"
                ],
                "$ref": "paths/devises/list_devises.json"
            },
            "post": {
                "tags": [
                    "Devises"
                ],
                "$ref": "paths/devises/create_devise.json"
            }
        },
        "/devises/{deviseId}": {
            "get": {
                "tags": [
                    "Devises"
                ],
                "$ref": "paths/devises/find_devise.json"
            },
            "put": {
                "tags": [
                    "Devises"
                ],
                "$ref": "paths/devises/update_devise.json"
            },
            "delete": {
                "tags": [
                    "Devises"
                ],
                "$ref": "paths/devises/delete_devise.json"
            }
        },
        "/periodes_exercice": {
            "get": {
                "tags": [
                    "PeriodesExercice"
                ],
                "$ref": "paths/periodes_exercice/list_periodes_exercice.json"
            },
            "post": {
                "tags": [
                    "PeriodesExercice"
                ],
                "$ref": "paths/periodes_exercice/create_periode_exercice.json"
            }
        },
        "/periodes_exercice/{periodeExerciceId}": {
            "get": {
                "tags": [
                    "PeriodesExercice"
                ],
                "$ref": "paths/periodes_exercice/find_periode_exercice.json"
            },
            "put": {
                "tags": [
                    "PeriodesExercice"
                ],
                "$ref": "paths/periodes_exercice/update_periode_exercice.json"
            },
            "delete": {
                "tags": [
                    "PeriodesExercice"
                ],
                "$ref": "paths/periodes_exercice/delete_periode_exercice.json"
            }
        },
        "/categories_de_compte": {
            "get": {
                "tags": [
                    "CategoriesDeCompte"
                ],
                "$ref": "paths/categories_de_compte/list_categories_de_compte.json"
            },
            "post": {
                "tags": [
                    "CategoriesDeCompte"
                ],
                "$ref": "paths/categories_de_compte/create_categorie_de_compte.json"
            }
        },
        "/categories_de_compte/{categorieDeCompteId}": {
            "get": {
                "tags": [
                    "CategoriesDeCompte"
                ],
                "$ref": "paths/categories_de_compte/find_categorie_de_compte.json"
            },
            "put": {
                "tags": [
                    "CategoriesDeCompte"
                ],
                "$ref": "paths/categories_de_compte/update_categorie_de_compte.json"
            },
            "delete": {
                "tags": [
                    "CategoriesDeCompte"
                ],
                "$ref": "paths/categories_de_compte/delete_categorie_de_compte.json"
            }
        },
        "/classes_de_compte": {
            "get": {
                "tags": [
                    "ClassesDeCompte"
                ],
                "$ref": "paths/classes_de_compte/list_classes_de_compte.json"
            },
            "post": {
                "tags": [
                    "ClassesDeCompte"
                ],
                "$ref": "paths/classes_de_compte/create_classe_de_compte.json"
            }
        },
        "/classes_de_compte/{classeDeCompteId}": {
            "get": {
                "tags": [
                    "ClassesDeCompte"
                ],
                "$ref": "paths/classes_de_compte/find_classe_de_compte.json"
            },
            "put": {
                "tags": [
                    "ClassesDeCompte"
                ],
                "$ref": "paths/classes_de_compte/update_classe_de_compte.json"
            },
            "delete": {
                "tags": [
                    "ClassesDeCompte"
                ],
                "$ref": "paths/classes_de_compte/delete_classe_de_compte.json"
            }
        },
        "/comptes": {
            "get": {
                "tags": [
                    "Comptes"
                ],
                "$ref": "paths/comptes/list_comptes.json"
            },
            "post": {
                "tags": [
                    "Comptes"
                ],
                "$ref": "paths/comptes/create_compte.json"
            }
        },
        "/comptes/{compteId}": {
            "get": {
                "tags": [
                    "Comptes"
                ],
                "$ref": "paths/comptes/find_compte.json"
            },
            "put": {
                "tags": [
                    "Comptes"
                ],
                "$ref": "paths/comptes/update_compte.json"
            },
            "delete": {
                "tags": [
                    "Comptes"
                ],
                "$ref": "paths/comptes/delete_compte.json"
            }
        },
        "/journaux": {
            "get": {
                "tags": [
                    "Journaux"
                ],
                "$ref": "paths/journaux/list.json"
            },
            "post": {
                "tags": [
                    "Journaux"
                ],
                "$ref": "paths/journaux/create_journal.json"
            }
        },
        "/journaux/{journalId}": {
            "get": {
                "tags": [
                    "Journaux"
                ],
                "$ref": "paths/journaux/find_journal.json"
            },
            "put": {
                "tags": [
                    "Journaux"
                ],
                "$ref": "paths/journaux/update_journal.json"
            },
            "delete": {
                "tags": [
                    "Journaux"
                ],
                "$ref": "paths/journaux/delete_journal.json"
            }
        },
        "/plans_comptable": {
            "get": {
                "tags": [
                    "Plans Comptable"
                ],
                "$ref": "paths/plans_comptable/list_plans_comptable.json"
            },
            "post": {
                "tags": [
                    "Plans Comptable"
                ],
                "$ref": "paths/plans_comptable/create_plan_comptable.json"
            }
        },
        "/plans_comptable/{planComptableId}": {
            "get": {
                "tags": [
                    "Plans Comptable"
                ],
                "$ref": "paths/plans_comptable/find_plan_comptable.json"
            },
            "put": {
                "tags": [
                    "Plans Comptable"
                ],
                "$ref": "paths/plans_comptable/update_plan_comptable.json"
            },
            "delete": {
                "tags": [
                    "Plans Comptable"
                ],
                "$ref": "paths/plans_comptable/delete_plan_comptable.json"
            }
        },
        "/plans_comptable/{planComptableId}/accounts": {
            "get": {
                "tags": [
                    "ListOfPlanComptableAccounts"
                ],
                "$ref": "paths/plans_comptable/accounts/list_accounts.json"
            }
        },
        "/plans_comptable/{planComptableId}/attach-accounts": {
            "put": {
                "tags": [
                    "AttachAccountsToPlanComptable"
                ],
                "$ref": "paths/plans_comptable/accounts/attach_accounts.json"
            }
        },
        "/plans_comptable/{planComptableId}/update-accounts": {
            "patch": {
                "tags": [
                    "Plan Comptable accounts"
                ],
                "$ref": "paths/plans_comptable/accounts/update_accounts.json"
            }
        },
        "/plans_comptable/{planComptableId}/detach-accounts": {
            "patch": {
                "tags": [
                    "Plan Comptable accounts"
                ],
                "$ref": "paths/plans_comptable/accounts/detach_accounts.json"
            }
        },
        "/plans_comptable/{planComptableId}/accounts/{accountId}/sub-accounts": {
            "get": {
                "tags": [
                    "ListOfPlanComptableAccountSubAccounts"
                ],
                "$ref": "paths/plans_comptable/accounts/sub_accounts/list.json"
            }
        },
        "/plans_comptable/{planComptableId}/accounts/{accountId}/attach-sub-accounts-to-an-account": {
            "put": {
                "tags": [
                    "AttachAccountsToPlanComptable"
                ],
                "$ref": "paths/plans_comptable/accounts/sub_accounts/attach_sub_accounts.json"
            }
        },
        "/plans_comptable/{planComptableId}/accounts/{accountId}/update-attach-sub-accounts-of-an-account": {
            "patch": {
                "tags": [
                    "Plan Comptable accounts"
                ],
                "$ref": "paths/plans_comptable/accounts/sub_accounts/update_sub_accounts.json"
            }
        },
        "/plans_comptable/{planComptableId}/accounts/{accountId}/detach-sub-accounts-from-an-account": {
            "patch": {
                "tags": [
                    "Plan Comptable accounts"
                ],
                "$ref": "paths/plans_comptable/accounts/sub_accounts/detach_sub_accounts.json"
            }
        },
        "/exercices_comptable": {
            "get": {
                "tags": [
                    "Exercices comptable"
                ],
                "$ref": "paths/exercices_comptable/list.json"
            },
            "post": {
                "tags": [
                    "Exercices comptable"
                ],
                "$ref": "paths/exercices_comptable/create_exercice_comptable.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}": {
            "get": {
                "tags": [
                    "Exercices comptable"
                ],
                "$ref": "paths/exercices_comptable/find_exercice_comptable.json"
            },
            "put": {
                "tags": [
                    "Exercices comptable"
                ],
                "$ref": "paths/exercices_comptable/update_exercice_comptable.json"
            },
            "delete": {
                "tags": [
                    "Exercices comptable"
                ],
                "$ref": "paths/exercices_comptable/delete_exercice_comptable.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/report-des-soldes-aux-comptes": {
            "put": {
                "$ref": "paths/exercices_comptable/report.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/balance-des-comptes": {
            "get": {
                "tags": [
                    "Balance des comptes d'une periode d'exercice."
                ],
                "$ref": "paths/exercices_comptable/balance.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/journals": {
            "get": {
                "tags": [
                    "Journaux"
                ],
                "$ref": "paths/exercices_comptable/journals.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/cloture": {
            "get": {
                "$ref": "paths/exercices_comptable/cloture.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/ecritures-comptable": {
            "get": {
                "tags": [
                    "Exercices comptable"
                ],
                "$ref": "paths/exercices_comptable/ecritures_comptable/entries.json"
            },
            "put": {
                "tags": [
                    "Exercices comptable"
                ],
                "$ref": "paths/exercices_comptable/ecritures_comptable/suivi.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/operations_comptable_disponible": {
            "get": {
                "tags": [
                    "Operations comptable"
                ],
                "$ref": "paths/exercices_comptable/operations_comptable_disponible/entries.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/suivi": {
            "put": {
                "tags": [
                    "Suivi comptable"
                ],
                "$ref": "paths/exercices_comptable/operations_comptable_disponible/suivi.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/validate_operations_comptable_disponible/{operationComptableId}": {
            "put": {
                "tags": [
                    "Validate suivi comptable"
                ],
                "$ref": "paths/exercices_comptable/operations_comptable_disponible/validate.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/ecritures-analytique": {
            "get": {
                "tags": [
                    "Ecritures analytique"
                ],
                "$ref": "paths/exercices_comptable/ecritures_analytique/ecritures_analytique.json"
            },
            "put": {
                "tags": [
                    "Ecritures analytique"
                ],
                "$ref": "paths/exercices_comptable/ecritures_analytique/new_entry.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/operations-analytique": {
            "get": {
                "tags": [
                    "Operations analytique"
                ],
                "$ref": "paths/exercices_comptable/operations_analytique/entries.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/suivi-analytique": {
            "put": {
                "tags": [
                    "Suivi Analytique"
                ],
                "$ref": "paths/exercices_comptable/operations_analytique/suivi.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/validate_operations_analytique/{operationAnalytiqueId}": {
            "put": {
                "tags": [
                    "Validate suivi analytique"
                ],
                "$ref": "paths/exercices_comptable/operations_analytique/validate.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/immobilisations": {
            "get": {
                "tags": [
                    "Immobilisations"
                ],
                "$ref": "paths/immobilisations/list.json"
            },
            "post": {
                "tags": [
                    "Immobilisations"
                ],
                "$ref": "paths/immobilisations/create_immobilisation.json"
            }
        },
        "/exercices_comptable/{exerciceComptableId}/immobilisations/{immobilisationId}": {
            "get": {
                "tags": [
                    "Immobilisations"
                ],
                "$ref": "paths/immobilisations/find_immobilisation.json"
            },
            "put": {
                "tags": [
                    "Immobilisations"
                ],
                "$ref": "paths/immobilisations/update_immobilisation.json"
            },
            "delete": {
                "tags": [
                    "Immobilisations"
                ],
                "$ref": "paths/immobilisations/delete_immobilisation.json"
            }
        },
        "/projets_production": {
            "get": {
                "tags": [
                    "ProjetsProduction"
                ],
                "$ref": "paths/projets_production/list.json"
            },
            "post": {
                "tags": [
                    "ProjetsProduction"
                ],
                "$ref": "paths/projets_production/create_projet_production.json"
            }
        },
        "/projets_production/{projetProductionId}": {
            "get": {
                "tags": [
                    "ProjetsProduction"
                ],
                "$ref": "paths/projets_production/find_projet_production.json"
            },
            "put": {
                "tags": [
                    "ProjetsProduction"
                ],
                "$ref": "paths/projets_production/update_projet_production.json"
            },
            "delete": {
                "tags": [
                    "ProjetsProduction"
                ],
                "$ref": "paths/projets_production/delete_projet_production.json"
            }
        },
        "/login": {
            "post": {
                "summary": "Authentication",
                "description": "User authentication",
                "parameters": [
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "requestBody": {
                    "description": "Authentication request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Indicates whether the request was successful.",
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful authenticate",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "example": null
                                        },
                                        "data": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/OAuthClient",
                                            "description": "Additional information about the response."
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "summary": "Logout",
                "description": "User logout",
                "parameters": [
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "default": "User logged out successfully.",
                                            "example": "User logged out successfully."
                                        },
                                        "data": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "default": null,
                                            "example": null
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "Retrieve the authenticate user",
                "description": "Retrieve the details of the authenticate user",
                "parameters": [
                    {
                        "$ref": "components/headers/origin.json"
                    },
                    {
                        "$ref": "components/headers/content_type.json"
                    },
                    {
                        "$ref": "components/headers/accept.json"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Indicates whether the request was successful.",
                                            "default": true,
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Additional information about the response.",
                                            "nullable": true,
                                            "default": null,
                                            "example": null
                                        },
                                        "data": {
                                            "description": "Additional information about the response.",
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "default": 200,
                                            "example": 200
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Role": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "Unique identifier for the role"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the role"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the role"
                    }
                }
            },
            "Taux": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "Unique identifier for the role"
                    },
                    "hint": {
                        "type": "number",
                        "description": "Name of the role",
                        "example": 1.00,
                        "default": 1.00
                    },
                    "rate": {
                        "type": "number",
                        "description": "Name of the role",
                        "example": 180000.00,
                        "default": 0.00
                    },
                    "rate_measure_unit_symbol": {
                        "type": "string",
                        "description": "Description of the role",
                        "example": "xof",
                        "default": "xof"
                    },
                    "work_unit": {
                        "type": "object",
                        "description": "Description of the role",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Description of the role",
                                "example": "temps",
                                "default": "temps"
                            },
                            "symbol": {
                                "type": "string",
                                "description": "Description of the role",
                                "example": "mois",
                                "default": "mois"
                            }
                        },
                        "example": [
                            {
                                "type": "temps",
                                "symbol": "mois"
                            }
                        ],
                        "default": {
                            "type": "article",
                            "symbol": "kg"
                        }
                    }
                }
            },
            "CategoryOfEmployee": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "Unique identifier for the categories of employees"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the categories of employees"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the categories of employees"
                    },
                    "category_id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "Unique identifier for the categories of employees"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "Unique identifier for the role"
                    },
                    "type_of_account": {
                        "enum": [
                            "personal",
                            "company"
                        ],
                        "example": "personal",
                        "default": "personal"
                    },
                    "login_channel": {
                        "enum": [
                            "email",
                            "phone_number"
                        ],
                        "example": "email",
                        "default": "email"
                    },
                    "username": {
                        "$ref": "#/components/schemas/FieldName",
                        "description": "User username in the system",
                        "nullable": true,
                        "example": "johndoe"
                    },
                    "email": {
                        "type": "string",
                        "description": "Description of the categories of employees",
                        "nullable": true,
                        "example": "johndoe@gmail.com",
                        "default": "user@gmail.com"
                    },
                    "phone_number": {
                        "type": "object",
                        "description": "Description of the categories of employees",
                        "properties": {
                            "country_code": {
                                "type": "integer",
                                "description": "Description of the categories of employees",
                                "example": 229,
                                "default": 229
                            },
                            "number": {
                                "type": "integer",
                                "description": "Description of the categories of employees",
                                "example": 94531209,
                                "default": 90000000
                            }
                        },
                        "example": [
                            {
                                "country_code": 229,
                                "number": 96321024
                            }
                        ]
                    },
                    "address": {
                        "type": "string",
                        "description": "Description of the categories of employees",
                        "nullable": true
                    },
                    "userable": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Person",
                                "description": "User of type personal request details"
                            },
                            {
                                "$ref": "#/components/schemas/Company",
                                "description": "User of type company request details"
                            }
                        ],
                        "description": "Type of user details"
                    }
                }
            },
            "Person": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "User  of type company identifier"
                    },
                    "first_name": {
                        "type": "string",
                        "minLength": 6,
                        "maxLength": 50,
                        "example": [
                            "John",
                            "Jane"
                        ],
                        "description": "User first name"
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 6,
                        "maxLength": 50,
                        "default": "DOE",
                        "example": "DOE",
                        "description": "User last name"
                    },
                    "middle_name": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldName"
                        },
                        "example": [
                            "Phillipe",
                            "Jack"
                        ],
                        "description": "User middle names"
                    },
                    "sex": {
                        "enum": [
                            "male",
                            "female"
                        ],
                        "default": "male",
                        "example": "male"
                    },
                    "marital_status": {
                        "enum": [
                            "single",
                            "married",
                            "divorced",
                            "widowed"
                        ],
                        "example": "single",
                        "default": "single"
                    },
                    "birth_date": {
                        "$ref": "#/components/schemas/DateFormat",
                        "example": "DOE",
                        "description": "User last name"
                    },
                    "ifu": {
                        "type": "integer",
                        "description": "User ifu",
                        "nullable": true,
                        "default": null,
                        "example": 45984960456
                    },
                    "nip": {
                        "type": "integer",
                        "description": "User ifu",
                        "nullable": true,
                        "default": null,
                        "example": 45984960456
                    },
                    "nationality": {
                        "$ref": "#/components/schemas/FieldName",
                        "example": "Beninois",
                        "description": "User nationality"
                    }
                }
            },
            "Company": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "User  of type company identifier"
                    },
                    "name": {
                        "$ref": "#/components/schemas/FieldName",
                        "example": "SYSCO",
                        "description": "User  of type company name"
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "GE-45GTWO",
                        "description": "Company registration number"
                    }
                }
            },
            "Credential": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "User  of type company identifier"
                    },
                    "identifier": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 12,
                        "example": "User identifier",
                        "description": "Description du nom du champ of the categories of employees"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 12,
                        "example": "password",
                        "description": "Description of the categories of employees"
                    }
                }
            },
            "OAuthClient": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "Bearer",
                        "default": "Bearer",
                        "description": "Type of oauth client"
                    },
                    "expires_in": {
                        "type": "integer",
                        "example": "1296000",
                        "default": "1296000",
                        "description": "OAuth access token expiration time"
                    },
                    "access_token": {
                        "type": "string",
                        "example": "Auth access token",
                        "description": "Description du nom du champ of the categories of employees"
                    },
                    "refresh_token": {
                        "type": "string",
                        "example": "Auth refresh token",
                        "description": "Description du nom du champ of the categories of employees"
                    }
                }
            },
            "Identifier": {
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-x]{4}-[1-5][0-9a-z]{3}-[89AB][0-9a-q]{3}-[0-9a-f]{12}$",
                "minLength": 32,
                "maxLength": 36,
                "example": "b257f261-9r73-4e4-64d-d733b56fq3af",
                "description": "UUID unique au sein de notre systeme"
            },
            "FieldName": {
                "type": "string",
                "minLength": 3,
                "maxLength": 50
            },
            "DateFormat": {
                "description": "Format de validation des dates",
                "type": "string",
                "pattern": "([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) (([01]?[0-9]|2[0-3])h):(([0-5][0-9])min)",
                "example": "2019/05/17 09h:23min",
                "minLength": 20,
                "maxLength": 50
            },
            "UserRequest": {
                "required": [
                    "type_of_account",
                    "login_channel",
                    "phone_number",
                    "role_id",
                    "user"
                ],
                "type": "object",
                "properties": {
                    "type_of_account": {
                        "enum": [
                            "personal",
                            "company"
                        ],
                        "example": "personal",
                        "default": "personal"
                    },
                    "login_channel": {
                        "enum": [
                            "email",
                            "phone_number"
                        ],
                        "example": "email",
                        "default": "email"
                    },
                    "username": {
                        "$ref": "#/components/schemas/FieldName",
                        "description": "User username in the system",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "Description of the categories of employees",
                        "nullable": true
                    },
                    "phone_number": {
                        "type": "object",
                        "description": "Description of the categories of employees",
                        "properties": {
                            "country_code": {
                                "type": "integer",
                                "description": "Description of the categories of employees",
                                "example": 229,
                                "default": 229
                            },
                            "number": {
                                "type": "integer",
                                "description": "Description of the categories of employees",
                                "example": 94531209,
                                "default": 90000000
                            }
                        }
                    },
                    "address": {
                        "type": "string",
                        "description": "Description of the categories of employees",
                        "nullable": true
                    },
                    "role_id": {
                        "$ref": "#/components/schemas/Identifier",
                        "description": "Description of the r of employees"
                    },
                    "user": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/PersonRequest",
                                "description": "User of type personal request details"
                            },
                            {
                                "$ref": "#/components/schemas/CompanyRequest",
                                "description": "User of type company request details"
                            }
                        ],
                        "description": "Type of user details"
                    }
                }
            },
            "PersonRequest": {
                "required": [
                    "first_name",
                    "last_name",
                    "sex"
                ],
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "minLength": 6,
                        "maxLength": 50,
                        "example": [
                            "John",
                            "Jules"
                        ],
                        "description": "User first name"
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 6,
                        "maxLength": 50,
                        "default": "DOE",
                        "example": [
                            "DOE",
                            "GINA"
                        ],
                        "description": "User last name"
                    },
                    "middle_name": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldName"
                        },
                        "example": [
                            "Phillipe"
                        ],
                        "description": "User middle names"
                    },
                    "sex": {
                        "enum": [
                            "male",
                            "female"
                        ],
                        "default": "male",
                        "example": "male"
                    },
                    "marital_status": {
                        "enum": [
                            "single",
                            "married",
                            "divorced",
                            "widowed"
                        ],
                        "example": "single",
                        "default": "single"
                    },
                    "birth_date": {
                        "$ref": "#/components/schemas/FieldName",
                        "example": "2019/05/17",
                        "nullable": true,
                        "description": "User last name"
                    },
                    "ifu": {
                        "type": "integer",
                        "description": "User ifu",
                        "nullable": true,
                        "default": null,
                        "example": 45984960456
                    },
                    "nip": {
                        "type": "integer",
                        "description": "User ifu",
                        "nullable": true,
                        "default": null,
                        "example": 45984960456
                    },
                    "nationality": {
                        "$ref": "#/components/schemas/FieldName",
                        "examples": [
                            "Beninois",
                            "Congolais"
                        ],
                        "description": "User nationality"
                    }
                }
            },
            "CompanyRequest": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/FieldName",
                        "example": "SYSCO",
                        "description": "User  of type company name"
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "GE-45GTWO",
                        "description": "Company registration number"
                    }
                }
            },
            "CategoryOfEmployeeRequest": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/FieldName",
                        "example": "Nom du champ",
                        "description": "Description du nom du champ of the categories of employees"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the categories of employees",
                        "nullable": true
                    },
                    "category_id": {
                        "type": "string",
                        "description": "Unique identifier for the categories of employees",
                        "nullable": true
                    }
                }
            },
            "LoginRequest": {
                "required": [
                    "identifier",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 12,
                        "default": "johndoe@gmail.com",
                        "example": "johndoe@gmail.com",
                        "description": "Description du nom du champ of the categories of employees"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "maxLength": 12,
                        "example": "password",
                        "default": "password",
                        "description": "Description of the categories of employees"
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKey": {
                "type": "apiKey",
                "in": "header",
                "name": "X-Api-Key"
            }
        }
    },
    "security": [
        {
            "ApiKey": []
        }
    ]
}